syntax = "proto3";

package entry_task;
option go_package ="entry_task/pb";
//protoc --go_out=. --go-grpc_out=. --go-grpc_opt=require_unimplemented_servers=false et_tcp.proto
message UpdateUserInfoRequest {
  optional string uid = 1;
  optional string nick = 2;
  optional string pic = 3;
}
message UpdateUserInfoResponse {
  optional int32 ret  = 1;
}

message GetSessionInfoRequest{
  optional string session_id = 1;
}
message GetSessionInfoResponse{
  optional int32 ret = 1;
  optional string session_info = 2;
}

message RefreshSessionRequest {
  optional string session_id = 1;
}
message RefreshSessionResponse {
  optional int32 ret = 1;
}

message SetSessionInfoRequest {
  optional string session_id = 1;
  optional string session_info = 2;
}
message SetSessionInfoResponse {
  optional int32 ret = 1;
}

message GetUserInfoRequest {
  optional string uid = 1;
}
message GetUserInfoResponse {
  optional int32 ret = 1;
  optional string uid = 2;
  optional string nick = 3;
  optional string pic = 4;
  optional string pwd = 5;
}

message MessageInfo {
  optional uint64 id = 1;
  optional string msg = 2;
  optional string image = 3;
  optional string owner = 4;
  optional uint64 ctime = 5;
  optional uint64 mtime = 6;
  optional string uid = 7;
}

message GetMessageListRequest {
  optional string uid = 1;
  optional int32 page = 2;
  optional int32 page_size = 3;
}

message GetMessageListResponse {
  optional uint32 ret = 1;
  repeated MessageInfo list = 2;
  optional int32 total = 3;
}

message PublishMessageRequest {
  optional string uid = 1;
  optional string userName = 2;
  optional string message = 3;
}
message PublishMessageResponse {
  optional uint32 ret = 1;
}

message DeleteMessageRequest {
  optional string uid = 1;
  optional uint64 msg_id = 2;
  optional string note = 3;
}

message DeleteMessageResponse {
  optional uint32 ret = 1;
}

message DeleteSessionRequest {
  optional string session_id = 1;
}

message DeleteSessionResponse {
  optional int32 ret = 1;
}

message  GetCommentsByMessageIdsRequest {
  repeated uint64 message_ids = 1;
}

message MessageCommentsItem {
  uint64 message_id = 1;
  string comment = 2;
  uint64 comment_id = 3;
  uint64 ctime = 4;
  string uid = 5;
  string user_name = 6;
}

message GetCommentsByMessageIdsResponse {
  optional int32 ret = 1;
  repeated MessageCommentsItem list = 2;
}

message GetReplyByCommentIdsRequest {
  repeated uint64 comment_ids = 1;
}

message CommentReplyItem {
  uint64 comment_id = 1;
  string reply = 2;
  uint64 reply_id = 3;
  uint64  ctime = 4;
  string uid = 5;
  string user_name = 6;
  string to_uid = 7;
  string to_user_name = 8;
}

message GetReplyByCommentIdsResponse {
  optional int32 ret = 1;
  repeated CommentReplyItem list = 2;
}

message SetCommentRequest {
  optional string comment = 1;
  optional int64 message_id = 2;
  optional string uid = 3;
}
message SetCommentResponse {
  optional int32 ret = 1;
}

service EntryTask {
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse) {}
  rpc UpdateUserInfo (UpdateUserInfoRequest) returns (UpdateUserInfoResponse) {}
  rpc GetSessionInfo (GetSessionInfoRequest) returns (GetSessionInfoResponse) {}
  rpc RefreshSession (RefreshSessionRequest) returns (RefreshSessionResponse) {}
  rpc SetSessionInfo (SetSessionInfoRequest) returns (SetSessionInfoResponse) {}
  rpc DeleteSession (DeleteSessionRequest) returns (DeleteSessionResponse) {}
  rpc GetMessageList (GetMessageListRequest) returns (GetMessageListResponse) {}
  rpc PublishMessage (PublishMessageRequest) returns  (PublishMessageResponse) {}
  rpc DeleteMessage (DeleteMessageRequest) returns  (DeleteMessageResponse) {}

  rpc GetCommentsByMessageIds(GetCommentsByMessageIdsRequest) returns(GetCommentsByMessageIdsResponse) {}
  rpc GetReplyByCommentIds(GetReplyByCommentIdsRequest) returns(GetReplyByCommentIdsResponse) {}
  rpc SetComment(SetCommentRequest)returns(SetCommentResponse) {}
}