// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: et_tcp.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  *string `protobuf:"bytes,1,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
	Nick *string `protobuf:"bytes,2,opt,name=nick,proto3,oneof" json:"nick,omitempty"`
	Pic  *string `protobuf:"bytes,3,opt,name=pic,proto3,oneof" json:"pic,omitempty"`
}

func (x *UpdateUserInfoRequest) Reset() {
	*x = UpdateUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoRequest) ProtoMessage() {}

func (x *UpdateUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateUserInfoRequest) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *UpdateUserInfoRequest) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *UpdateUserInfoRequest) GetPic() string {
	if x != nil && x.Pic != nil {
		return *x.Pic
	}
	return ""
}

type UpdateUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret,proto3,oneof" json:"ret,omitempty"`
}

func (x *UpdateUserInfoResponse) Reset() {
	*x = UpdateUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResponse) ProtoMessage() {}

func (x *UpdateUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserInfoResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GetSessionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
}

func (x *GetSessionInfoRequest) Reset() {
	*x = GetSessionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoRequest) ProtoMessage() {}

func (x *GetSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{2}
}

func (x *GetSessionInfoRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type GetSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32  `protobuf:"varint,1,opt,name=ret,proto3,oneof" json:"ret,omitempty"`
	SessionInfo *string `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo,proto3,oneof" json:"session_info,omitempty"`
}

func (x *GetSessionInfoResponse) Reset() {
	*x = GetSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoResponse) ProtoMessage() {}

func (x *GetSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{3}
}

func (x *GetSessionInfoResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetSessionInfoResponse) GetSessionInfo() string {
	if x != nil && x.SessionInfo != nil {
		return *x.SessionInfo
	}
	return ""
}

type RefreshSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
}

func (x *RefreshSessionRequest) Reset() {
	*x = RefreshSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshSessionRequest) ProtoMessage() {}

func (x *RefreshSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshSessionRequest.ProtoReflect.Descriptor instead.
func (*RefreshSessionRequest) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshSessionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type RefreshSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret,proto3,oneof" json:"ret,omitempty"`
}

func (x *RefreshSessionResponse) Reset() {
	*x = RefreshSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshSessionResponse) ProtoMessage() {}

func (x *RefreshSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshSessionResponse.ProtoReflect.Descriptor instead.
func (*RefreshSessionResponse) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshSessionResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SetSessionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	SessionInfo *string `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo,proto3,oneof" json:"session_info,omitempty"`
}

func (x *SetSessionInfoRequest) Reset() {
	*x = SetSessionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSessionInfoRequest) ProtoMessage() {}

func (x *SetSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*SetSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{6}
}

func (x *SetSessionInfoRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *SetSessionInfoRequest) GetSessionInfo() string {
	if x != nil && x.SessionInfo != nil {
		return *x.SessionInfo
	}
	return ""
}

type SetSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret,proto3,oneof" json:"ret,omitempty"`
}

func (x *SetSessionInfoResponse) Reset() {
	*x = SetSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSessionInfoResponse) ProtoMessage() {}

func (x *SetSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*SetSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{7}
}

func (x *SetSessionInfoResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid *string `protobuf:"bytes,1,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserInfoRequest) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32  `protobuf:"varint,1,opt,name=ret,proto3,oneof" json:"ret,omitempty"`
	Uid  *string `protobuf:"bytes,2,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
	Nick *string `protobuf:"bytes,3,opt,name=nick,proto3,oneof" json:"nick,omitempty"`
	Pic  *string `protobuf:"bytes,4,opt,name=pic,proto3,oneof" json:"pic,omitempty"`
	Pwd  *string `protobuf:"bytes,5,opt,name=pwd,proto3,oneof" json:"pwd,omitempty"`
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_et_tcp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_et_tcp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_et_tcp_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserInfoResponse) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetUserInfoResponse) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *GetUserInfoResponse) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *GetUserInfoResponse) GetPic() string {
	if x != nil && x.Pic != nil {
		return *x.Pic
	}
	return ""
}

func (x *GetUserInfoResponse) GetPwd() string {
	if x != nil && x.Pwd != nil {
		return *x.Pwd
	}
	return ""
}

var File_et_tcp_proto protoreflect.FileDescriptor

var file_et_tcp_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x74, 0x5f, 0x74, 0x63, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x77, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x03, 0x70, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75,
	0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x70, 0x69, 0x63, 0x22, 0x37, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x74, 0x22, 0x4a, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x03, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x15, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x15, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x74, 0x22,
	0x83, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x37, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x74, 0x22, 0x33,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x75, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x63, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x77, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03, 0x70, 0x77, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x69, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x69,
	0x63, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x77, 0x64, 0x32, 0xc9, 0x03, 0x0a, 0x09, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_et_tcp_proto_rawDescOnce sync.Once
	file_et_tcp_proto_rawDescData = file_et_tcp_proto_rawDesc
)

func file_et_tcp_proto_rawDescGZIP() []byte {
	file_et_tcp_proto_rawDescOnce.Do(func() {
		file_et_tcp_proto_rawDescData = protoimpl.X.CompressGZIP(file_et_tcp_proto_rawDescData)
	})
	return file_et_tcp_proto_rawDescData
}

var file_et_tcp_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_et_tcp_proto_goTypes = []interface{}{
	(*UpdateUserInfoRequest)(nil),  // 0: entry_task.UpdateUserInfoRequest
	(*UpdateUserInfoResponse)(nil), // 1: entry_task.UpdateUserInfoResponse
	(*GetSessionInfoRequest)(nil),  // 2: entry_task.GetSessionInfoRequest
	(*GetSessionInfoResponse)(nil), // 3: entry_task.GetSessionInfoResponse
	(*RefreshSessionRequest)(nil),  // 4: entry_task.RefreshSessionRequest
	(*RefreshSessionResponse)(nil), // 5: entry_task.RefreshSessionResponse
	(*SetSessionInfoRequest)(nil),  // 6: entry_task.SetSessionInfoRequest
	(*SetSessionInfoResponse)(nil), // 7: entry_task.SetSessionInfoResponse
	(*GetUserInfoRequest)(nil),     // 8: entry_task.GetUserInfoRequest
	(*GetUserInfoResponse)(nil),    // 9: entry_task.GetUserInfoResponse
}
var file_et_tcp_proto_depIdxs = []int32{
	8, // 0: entry_task.EntryTask.GetUserInfo:input_type -> entry_task.GetUserInfoRequest
	0, // 1: entry_task.EntryTask.UpdateUserInfo:input_type -> entry_task.UpdateUserInfoRequest
	2, // 2: entry_task.EntryTask.GetSessionInfo:input_type -> entry_task.GetSessionInfoRequest
	4, // 3: entry_task.EntryTask.RefreshSession:input_type -> entry_task.RefreshSessionRequest
	6, // 4: entry_task.EntryTask.SetSessionInfo:input_type -> entry_task.SetSessionInfoRequest
	9, // 5: entry_task.EntryTask.GetUserInfo:output_type -> entry_task.GetUserInfoResponse
	1, // 6: entry_task.EntryTask.UpdateUserInfo:output_type -> entry_task.UpdateUserInfoResponse
	3, // 7: entry_task.EntryTask.GetSessionInfo:output_type -> entry_task.GetSessionInfoResponse
	5, // 8: entry_task.EntryTask.RefreshSession:output_type -> entry_task.RefreshSessionResponse
	7, // 9: entry_task.EntryTask.SetSessionInfo:output_type -> entry_task.SetSessionInfoResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_et_tcp_proto_init() }
func file_et_tcp_proto_init() {
	if File_et_tcp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_et_tcp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSessionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_et_tcp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_et_tcp_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_et_tcp_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_et_tcp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_et_tcp_proto_goTypes,
		DependencyIndexes: file_et_tcp_proto_depIdxs,
		MessageInfos:      file_et_tcp_proto_msgTypes,
	}.Build()
	File_et_tcp_proto = out.File
	file_et_tcp_proto_rawDesc = nil
	file_et_tcp_proto_goTypes = nil
	file_et_tcp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EntryTaskClient is the client API for EntryTask service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntryTaskClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
	GetSessionInfo(ctx context.Context, in *GetSessionInfoRequest, opts ...grpc.CallOption) (*GetSessionInfoResponse, error)
	RefreshSession(ctx context.Context, in *RefreshSessionRequest, opts ...grpc.CallOption) (*RefreshSessionResponse, error)
	SetSessionInfo(ctx context.Context, in *SetSessionInfoRequest, opts ...grpc.CallOption) (*SetSessionInfoResponse, error)
}

type entryTaskClient struct {
	cc grpc.ClientConnInterface
}

func NewEntryTaskClient(cc grpc.ClientConnInterface) EntryTaskClient {
	return &entryTaskClient{cc}
}

func (c *entryTaskClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/entry_task.EntryTask/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryTaskClient) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoRequest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	out := new(UpdateUserInfoResponse)
	err := c.cc.Invoke(ctx, "/entry_task.EntryTask/UpdateUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryTaskClient) GetSessionInfo(ctx context.Context, in *GetSessionInfoRequest, opts ...grpc.CallOption) (*GetSessionInfoResponse, error) {
	out := new(GetSessionInfoResponse)
	err := c.cc.Invoke(ctx, "/entry_task.EntryTask/GetSessionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryTaskClient) RefreshSession(ctx context.Context, in *RefreshSessionRequest, opts ...grpc.CallOption) (*RefreshSessionResponse, error) {
	out := new(RefreshSessionResponse)
	err := c.cc.Invoke(ctx, "/entry_task.EntryTask/RefreshSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryTaskClient) SetSessionInfo(ctx context.Context, in *SetSessionInfoRequest, opts ...grpc.CallOption) (*SetSessionInfoResponse, error) {
	out := new(SetSessionInfoResponse)
	err := c.cc.Invoke(ctx, "/entry_task.EntryTask/SetSessionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EntryTaskServer is the server API for EntryTask service.
type EntryTaskServer interface {
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	UpdateUserInfo(context.Context, *UpdateUserInfoRequest) (*UpdateUserInfoResponse, error)
	GetSessionInfo(context.Context, *GetSessionInfoRequest) (*GetSessionInfoResponse, error)
	RefreshSession(context.Context, *RefreshSessionRequest) (*RefreshSessionResponse, error)
	SetSessionInfo(context.Context, *SetSessionInfoRequest) (*SetSessionInfoResponse, error)
}

// UnimplementedEntryTaskServer can be embedded to have forward compatible implementations.
type UnimplementedEntryTaskServer struct {
}

func (*UnimplementedEntryTaskServer) GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedEntryTaskServer) UpdateUserInfo(context.Context, *UpdateUserInfoRequest) (*UpdateUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserInfo not implemented")
}
func (*UnimplementedEntryTaskServer) GetSessionInfo(context.Context, *GetSessionInfoRequest) (*GetSessionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessionInfo not implemented")
}
func (*UnimplementedEntryTaskServer) RefreshSession(context.Context, *RefreshSessionRequest) (*RefreshSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshSession not implemented")
}
func (*UnimplementedEntryTaskServer) SetSessionInfo(context.Context, *SetSessionInfoRequest) (*SetSessionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSessionInfo not implemented")
}

func RegisterEntryTaskServer(s *grpc.Server, srv EntryTaskServer) {
	s.RegisterService(&_EntryTask_serviceDesc, srv)
}

func _EntryTask_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryTaskServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entry_task.EntryTask/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryTaskServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntryTask_UpdateUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryTaskServer).UpdateUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entry_task.EntryTask/UpdateUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryTaskServer).UpdateUserInfo(ctx, req.(*UpdateUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntryTask_GetSessionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryTaskServer).GetSessionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entry_task.EntryTask/GetSessionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryTaskServer).GetSessionInfo(ctx, req.(*GetSessionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntryTask_RefreshSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryTaskServer).RefreshSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entry_task.EntryTask/RefreshSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryTaskServer).RefreshSession(ctx, req.(*RefreshSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EntryTask_SetSessionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSessionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryTaskServer).SetSessionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entry_task.EntryTask/SetSessionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryTaskServer).SetSessionInfo(ctx, req.(*SetSessionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EntryTask_serviceDesc = grpc.ServiceDesc{
	ServiceName: "entry_task.EntryTask",
	HandlerType: (*EntryTaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _EntryTask_GetUserInfo_Handler,
		},
		{
			MethodName: "UpdateUserInfo",
			Handler:    _EntryTask_UpdateUserInfo_Handler,
		},
		{
			MethodName: "GetSessionInfo",
			Handler:    _EntryTask_GetSessionInfo_Handler,
		},
		{
			MethodName: "RefreshSession",
			Handler:    _EntryTask_RefreshSession_Handler,
		},
		{
			MethodName: "SetSessionInfo",
			Handler:    _EntryTask_SetSessionInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "et_tcp.proto",
}
